
l2_device_summary_with_config:
  where_clause: ""
  feature_list:
    device_number_of_phone_updates: "count(distinct handset_imei)"
    device_most_used_handset_samsung: "sum(case when lower(handset_brand_name)='samsung' then 1 else 0 end)"
    device_most_used_handset_huawei: "sum(case when lower(handset_brand_name)='huwaei' then 1 else 0 end)"
    device_most_used_handset_oppo: "sum(case when lower(handset_brand_name)='oppo' then 1 else 0 end)"
    device_most_used_handset_apple: "sum(case when lower(handset_brand_name)='apple' then 1 else 0 end)"
    device_most_used_handset_xiaomi: "sum(case when lower(handset_brand_name)='xiaomi' then 1 else 0 end)"
    device_most_used_handset_others: "sum(case when lower(handset_brand_name) not in ('samsung','huwaei','oppo','apple','xiaomi') then 1 else 0 end)"
    device_high_range: "max(case when coalesce(launchprice ,saleprice) > 14500
                          then 1 else 0 end)"
    device_mid_range: "max(case when coalesce(launchprice ,saleprice) >= 4500 and coalesce(launchprice ,saleprice) <= 14500
                          then 1 else 0 end)"
    device_low_range: "max(case when coalesce(launchprice ,saleprice) < 4500 then 1 else 0 end)"
    device_smartphone: "max(case when handset_type in ('smart phone','smartphone')
                          then 1 else 0 end)"
    device_standardphone: "max(case when lower(handset_type) in ('standardphone','standard phone')
                            then 1 else 0 end)"
    device_legacyphone: "max(case when lower(handset_type) in ('legacyphone','legacy phone','legacy phone')
                            then 1 else 0 end)"
    device_netbook: "max(case when lower(handset_type) in ('net book','netbook')
                            then 1 else 0 end)"
    device_tablet: "max(case when lower(handset_type) in ('tablet') then 1 else 0 end)"
    device_phablet: "max(case when lower(handset_type) in ('phablet') then 1 else 0 end)"
    device_supports_gprs: "max(case when gprs_handset_support = 'Y' then 1 else 0 end)"
    device_supports_umts: "max(case when handset_support_3g_2100_yn = 'Y' then 1 else 0 end)"
    device_supports_hsdpa: "max(case when hsdpa = 'Y' then 1 else 0 end)"
    device_supports_lte: "max(case when hs_support_lte_1800 = 'Y' then 1 else 0 end)"
    device_is_device_os_android: "max(case when lower(os) = 'android' then 1 else 0 end)"
    device_is_device_os_ios: "max(case when lower(os) = 'ios' then 1 else 0 end)"
    device_is_device_os_others: "max(case when lower(os) NOT IN ('ios', 'android') then 1 else 0 end)"
    device_purchased_from_ais: "max(case when lower(handset_channel) = 'ais' then 1 else 0 end)"
    device_supports_dual_sim: "max(case when dual_sim = 'Y' then 1 else 0 end)"
    devices_uses_both_sim_slot: "max(case when dual_user_yn = 'Y' then 1 else 0 end)"
    device_supports_video_call: "max(case when video_call = 'Y' then 1 else 0 end)"
    device_supports_google_map: "max(case when google_map = 'Y' then 1 else 0 end)"
    device_supports_wds: "max(case when handset_wds_flag = 'Y' then 1 else 0 end)"
    device_module: "max(case when lower(handset_type) in ('module') then 1 else 0 end)"
    device_handheld: "max(case when lower(handset_type) in ('handheld') then 1 else 0 end)"
    device_vehicle: "max(case when lower(handset_type) in ('vehicle') then 1 else 0 end)"
    device_air_card_or_dongle: "max(case when lower(handset_type) in ('aircard/dongle') then 1 else 0 end)"
    device_modem: "max(case when lower(handset_type) in ('modem','modem') then 1 else 0 end)"
    device_wirelessrouter: "max(case when lower(handset_type) in ('wirelessrouter','wireless router')
     then 1 else 0 end)"
    device_smartwatch: "max(case when lower(handset_type) in ('smart watch','smartwatch')
                          then 1 else 0 end)"
    device_watchphone: "max(case when lower(handset_type) in ('watchphone','watch phone')
                          then 1 else 0 end)"
    device_iotvehicle: "max(case when lower(handset_type) in ('iot-vehicle') then 1 else 0 end)"
    device_unknown: "max(case when lower(handset_type) is null then 1 else 0 end)"
  granularity: "subscription_identifier, access_method_num, national_id_card, start_of_week"
