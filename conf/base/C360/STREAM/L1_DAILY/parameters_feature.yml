#Share of completed episodes Feature

int_l1_streaming_share_of_completed_episodes_features:
    where_clause: "where lower(content_group) = 'episode'"
    feature_list:
        episode_watched_count: "count(distinct(title))"
    granularity: "subscription_identifier, access_method_num,
    event_partition_date, start_of_week, start_of_month, series_title"
    #output_catalog: "int_l1_streaming_title_watched_features"


int_l1_streaming_share_of_completed_episodes_ratio_features:
    where_clause: ""
    feature_list:
        episode_watched_rank: "row_number() over (partition by subscription_identifier, access_method_num,
        event_partition_date, start_of_week, start_of_month order by sum(share_of_completed_episodes) desc)"


    granularity: "subscription_identifier, access_method_num,
    event_partition_date, start_of_week, start_of_month,series_title"
    #output_catalog: "int_l1_streaming_content_type_features"

l1_streaming_fav_tv_show_by_share_of_completed_episodes:
    where_clause: "where episode_watched_rank = 1"
    feature_list:
        access_method_num: access_method_num
        subscription_identifier: subscription_identifier
        event_partition_date: event_partition_date
        start_of_week: start_of_week
        start_of_month: start_of_month
        fav_tv_show_by_share_of_completed_episodes: "series_title"
    granularity: ""
    output_catalog: "l1_streaming_fav_tv_show_by_share_of_completed_episodes"

# Content Type Features
int_l1_streaming_content_type_features:
    where_clause: ""
    feature_list:
        traffic_rank: "row_number() over (partition by subscription_identifier, access_method_num,
        event_partition_date, start_of_week, start_of_month order by sum(volume_mb) desc)"

        duration_rank: "row_number() over (partition by subscription_identifier, access_method_num,
        event_partition_date, start_of_week, start_of_month order by sum(duration) desc)"
        traffic_volume_sum: "sum(volume_mb)"
        duration_sum: "sum(duration)"

    granularity: "subscription_identifier, access_method_num,
    event_partition_date, start_of_week, start_of_month, content_group"
    output_catalog: "int_l1_streaming_content_type_features"

l1_streaming_fav_content_group_by_volume:
    where_clause: "where traffic_rank = 1"
    feature_list:
        access_method_num: access_method_num
        subscription_identifier: subscription_identifier
        event_partition_date: event_partition_date
        start_of_week: start_of_week
        start_of_month: start_of_month
        fav_content_group_by_volume: content_group
        traffic_volume_mb_sum: traffic_volume_sum
    granularity: ""
    output_catalog: "l1_streaming_fav_content_group_by_volume"

l1_streaming_fav_content_group_by_duration:
    where_clause: "where duration_rank = 1"
    feature_list:
        access_method_num: access_method_num
        subscription_identifier: subscription_identifier
        event_partition_date: event_partition_date
        start_of_week: start_of_week
        start_of_month: start_of_month
        fav_content_group_by_duration: content_group
        duration_sum: duration_sum
    granularity: ""
    output_catalog: "l1_streaming_fav_content_group_by_duration"

# TV Channel Features
int_l1_streaming_tv_channel_features:
    where_clause: "where lower(content_group) = 'channel'"
    feature_list:
        tv_channel_rank_by_volume: "row_number() over (partition by subscription_identifier, access_method_num,
        event_partition_date, start_of_week, start_of_month order by sum(volume_mb) desc)"
        traffic_volume_sum: "sum(volume_mb)"
        tv_channel_rank_by_duration: "row_number() over (partition by subscription_identifier, access_method_num,
        event_partition_date, start_of_week, start_of_month order by sum(duration) desc)"
        duration_sum: "sum(duration)"
    granularity: "subscription_identifier, access_method_num, event_partition_date,start_of_week, start_of_month, title"
    output_catalog: "int_l1_streaming_tv_channel_features"

l1_streaming_fav_tv_channel_by_volume:
    where_clause: "where tv_channel_rank_by_volume = 1"
    feature_list:
        access_method_num: access_method_num
        subscription_identifier: subscription_identifier
        event_partition_date: event_partition_date
        start_of_week: start_of_week
        start_of_month: start_of_month
        fav_tv_channel_by_volume: title
        traffic_volume_mb_sum: traffic_volume_sum
    granularity: ""
    output_catalog: "l1_streaming_fav_tv_channel_by_volume"

l1_streaming_fav_tv_channel_by_duration:
    where_clause: "where tv_channel_rank_by_duration = 1"
    feature_list:
        access_method_num: access_method_num
        subscription_identifier: subscription_identifier
        event_partition_date: event_partition_date
        start_of_week: start_of_week
        start_of_month: start_of_month
        fav_tv_channel_by_duration: title
        duration_sum: duration_sum
    granularity: ""
    output_catalog: "l1_streaming_fav_tv_channel_by_duration"


# TV Show features
int_l1_streaming_tv_show_features:
    where_clause: "where lower(content_group) = 'episode'"
    feature_list:
        num_of_episode_watched_rank: "row_number() over (partition by subscription_identifier, access_method_num,
        event_partition_date, start_of_week,start_of_month order by count(distinct title) desc)"

    granularity: "subscription_identifier, access_method_num,
    event_partition_date, start_of_week, start_of_month, series_title"

l1_streaming_fav_tv_show_by_episode_watched:
    where_clause: "where num_of_episode_watched_rank = 1"
    feature_list:
        access_method_num: access_method_num
        subscription_identifier: subscription_identifier
        event_partition_date: event_partition_date
        start_of_week: start_of_week
        start_of_month: start_of_month
        fav_tv_show_by_episode_watched: "series_title"
    granularity: ""
    output_catalog: "l1_streaming_fav_tv_show_by_episode_watched"


 # Fav video service by download traffic
int_l1_streaming_video_service_feature:
    where_clause: "where lower(application_group) = 'videoplayers_editors'"
    feature_list:
        sum_download_kb_traffic_rank: "row_number() over (partition by subscription_identifier, access_method_num,
        event_partition_date, start_of_week,start_of_month order by sum(download_kb) desc)"
        sum_download_kb_traffic: "sum(download_kb)"
        visit_count: "1" # counting active days
    granularity: "subscription_identifier, access_method_num,
                  event_partition_date, start_of_week, start_of_month, application"
    output_catalog: "int_l1_streaming_video_service_feature"

l1_streaming_fav_video_service_by_download_feature:
    where_clause: "where sum_download_kb_traffic_rank = 1"
    feature_list:
        access_method_num: access_method_num
        subscription_identifier: subscription_identifier
        event_partition_date: event_partition_date
        start_of_week: start_of_week
        start_of_month: start_of_month
        fav_video_service_by_download_kb_traffic: "application"
        sum_download_kb_traffic: "sum_download_kb_traffic"
    granularity: ""
    output_catalog: "l1_streaming_fav_video_service_by_download_feature"

l1_streaming_2nd_fav_video_service_by_download_feature:
    where_clause: "where sum_download_kb_traffic_rank = 2"
    feature_list:
        access_method_num: access_method_num
        subscription_identifier: subscription_identifier
        event_partition_date: event_partition_date
        start_of_week: start_of_week
        start_of_month: start_of_month
        second_fav_video_service_by_download_kb_traffic: "application"
        sum_download_kb_traffic: "sum_download_kb_traffic"
    granularity: ""
    output_catalog: "l1_streaming_2nd_fav_video_service_by_download_feature"

 # Fav music service by download traffic
int_l1_streaming_music_service_feature:
    where_clause: "where lower(application_group) = 'music_audio'"
    feature_list:
        sum_download_kb_traffic_rank: "row_number() over (partition by subscription_identifier, access_method_num,
        event_partition_date, start_of_week,start_of_month order by sum(download_kb) desc)"
        sum_download_kb_traffic: "sum(download_kb)"
        visit_count: "1" # counting active days
    granularity: "subscription_identifier, access_method_num,
    event_partition_date, start_of_week, start_of_month, application"
    output_catalog: "int_l1_streaming_music_service_feature"


l1_streaming_fav_music_service_by_download_feature:
    where_clause: "where sum_download_kb_traffic_rank = 1"
    feature_list:
        access_method_num: access_method_num
        subscription_identifier: subscription_identifier
        event_partition_date: event_partition_date
        start_of_week: start_of_week
        start_of_month: start_of_month
        fav_music_service_by_download_kb_traffic: "application"
        sum_download_kb_traffic: "sum_download_kb_traffic"
    granularity: ""
    output_catalog: "l1_streaming_fav_music_service_by_download_feature"

l1_streaming_2nd_fav_music_service_by_download_feature:
    where_clause: "where sum_download_kb_traffic_rank = 2"
    feature_list:
        access_method_num: access_method_num
        subscription_identifier: subscription_identifier
        event_partition_date: event_partition_date
        start_of_week: start_of_week
        start_of_month: start_of_month
        second_fav_music_service_by_download_kb_traffic: "application"
        sum_download_kb_traffic: "sum_download_kb_traffic"
    granularity: ""
    output_catalog: "l1_streaming_2nd_fav_music_service_by_download_feature"

 # Fav esport service by download traffic
int_l1_streaming_esport_service_feature:
    where_clause: "where lower(application_group) = 'game'"
    feature_list:
        sum_download_kb_traffic_rank: "row_number() over (partition by subscription_identifier, access_method_num,
        event_partition_date, start_of_week,start_of_month order by sum(download_kb) desc)"
        sum_download_kb_traffic: "sum(download_kb)"
        visit_count: "1" # counting active days
    granularity: "subscription_identifier, access_method_num,
    event_partition_date, start_of_week, start_of_month, application"
    output_catalog: "int_l1_streaming_esport_service_feature"

l1_streaming_fav_esport_service_by_download_feature:
    where_clause: "where sum_download_kb_traffic_rank = 1"
    feature_list:
        access_method_num: access_method_num
        subscription_identifier: subscription_identifier
        event_partition_date: event_partition_date
        start_of_week: start_of_week
        start_of_month: start_of_month
        fav_esport_service_by_download_kb_traffic: "application"
        sum_download_kb_traffic: "sum_download_kb_traffic"
    granularity: ""
    output_catalog: "l1_streaming_fav_esport_service_by_download_feature"


l1_streaming_2nd_fav_esport_service_by_download_feature:
    where_clause: "where sum_download_kb_traffic_rank = 2"
    feature_list:
        access_method_num: access_method_num
        subscription_identifier: subscription_identifier
        event_partition_date: event_partition_date
        start_of_week: start_of_week
        start_of_month: start_of_month
        second_fav_esport_service_by_download_kb_traffic: "application"
        sum_download_kb_traffic: "sum_download_kb_traffic"
    granularity: ""
    output_catalog: "l1_streaming_2nd_fav_esport_service_by_download_feature"

# number of visit and volume of download traffic
l1_streaming_visit_count_and_download_traffic_feature:
    feature_list:
        unique_number_of_day_visit_youtube_video: "case when sum(case when lower(application) in ('youtube', 'youtube_go', 'youtubebyclick')
        then 1 else 0 end) >= 1 then 1 else 0 end"
        unique_number_of_day_visit_facebook_video: "case when sum(case when lower(application) in ('facebook') then 1 else 0 end) >= 1 then 1 else 0 end"
        unique_number_of_day_visit_linetv_video: "case when sum(case when lower(application) in ('linetv') then 1 else 0 end) >= 1 then 1 else 0 end"
        unique_number_of_day_visit_ais_play_video: "case when sum(case when lower(application) in ('ais_play') then 1 else 0 end) >= 1 then 1 else 0 end"
        unique_number_of_day_visit_netflix_video: "case when sum(case when lower(application) in ('netflix') then 1 else 0 end) >= 1 then 1 else 0 end"
        unique_number_of_day_visit_viu_video: "case when sum(case when lower(application) in ('viu', 'viutv') then 1 else 0 end) >= 1 then 1 else 0 end"
        unique_number_of_day_visit_iflix_video: "case when sum(case when lower(application) in ('iflix') then 1 else 0 end) >= 1 then 1 else 0 end"

        unique_number_of_day_visit_spotify_music: "case when sum(case when lower(application) in ('spotify') then 1 else 0 end) >= 1 then 1 else 0 end"
        unique_number_of_day_visit_joox_music: "case when sum(case when lower(application) in ('jooxmusic') then 1 else 0 end) >= 1 then 1 else 0 end"

        unique_number_of_day_visit_twitch_esport: "case when sum(case when lower(application) in ('twitchtv') then 1 else 0 end) >= 1 then 1 else 0 end"
        unique_number_of_day_visit_bigo_esport: "case when sum(case when lower(application) in ('bigo') then 1 else 0 end) >= 1 then 1 else 0 end"
        unique_number_of_day_visit_mixer_esport: "case when sum(case when lower(application) in ('mixerbox') then 1 else 0 end) >= 1 then 1 else 0 end"
        unique_number_of_day_visit_steamtv_esport: "case when sum(case when lower(application) in ('valve_steam') then 1 else 0 end) >= 1 then 1 else 0 end"

        download_kb_traffic_youtube_video: "sum(case when lower(application) in ('youtube', 'youtube_go', 'youtubebyclick') then download_kb else 0 end)"
        download_kb_traffic_facebook_video: "sum(case when lower(application) in ('facebook') then download_kb else 0 end)"
        download_kb_traffic_linetv_video: "sum(case when lower(application) in ('linetv') then download_kb else 0 end)"
        download_kb_traffic_ais_play_video: "sum(case when lower(application) in ('ais_play') then download_kb else 0 end)"
        download_kb_traffic_netflix_video: "sum(case when lower(application) in ('netflix') then download_kb else 0 end)"
        download_kb_traffic_viu_video: "sum(case when lower(application) in ('viu', 'viutv') then download_kb else 0 end)"
        download_kb_traffic_iflix_video: "sum(case when lower(application) in ('iflix') then download_kb else 0 end)"

        download_kb_traffic_spotify_music: "sum(case when lower(application) in ('spotify') then download_kb else 0 end)"
        download_kb_traffic_joox_music: "sum(case when lower(application) in ('jooxmusic') then download_kb else 0 end)"

        download_kb_traffic_twitch_esport: "sum(case when lower(application) in ('twitchtv') then download_kb else 0 end)"
        download_kb_traffic_bigo_esport: "sum(case when lower(application) in ('bigo') then download_kb else 0 end)"
        download_kb_traffic_mixer_esport: "sum(case when lower(application) in ('mixerbox') then download_kb else 0 end)"
        download_kb_traffic_steamtv_esport: "sum(case when lower(application) in ('valve_steam') then download_kb else 0 end)"

        # additional request from DS
        unique_number_of_day_visit_line: "case when sum(case when lower(application) in ('line') then 1 else 0 end) >= 1 then 1 else 0 end"
        unique_number_of_day_visit_twitter: "case when sum(case when lower(application) in ('twitter') then 1 else 0 end) >= 1 then 1 else 0 end"
        unique_number_of_day_visit_gmail: "case when sum(case when lower(application) in ('webmail_gmail') then 1 else 0 end) >= 1 then 1 else 0 end"
        unique_number_of_day_visit_amazon: "case when sum(case when lower(application) in ('amazon', 'amazon_shopping_app') then 1 else 0 end) >= 1 then 1 else 0 end"

        # 1 for Monday, 7 for Sunday
        day_of_week: "date_format(event_partition_date, 'u')"
    granularity: "subscription_identifier, access_method_num, event_partition_date, start_of_week, start_of_month"
    output_catalog: "l1_streaming_visit_count_and_download_traffic_feature"


l1_streaming_session_duration_feature:
    feature_list:
        sum_session_duration_youtube_video: "sum(case when lower(application) in ('youtube', 'youtube_go',
         'youtubebyclick') then duration else 0 end)"
        sum_session_duration_facebook_video: "sum(case when lower(application) in ('facebook') then duration else 0 end)"
        sum_session_duration_linetv_video: "sum(case when lower(application) in ('linetv') then duration else 0 end)"
        sum_session_duration_ais_play_video: "sum(case when lower(application) in ('ais_play') then duration else 0 end)"
        sum_session_duration_netflix_video: "sum(case when lower(application) in ('netflix') then duration else 0 end)"
        sum_session_duration_viu_video: "sum(case when lower(application) in ('viu', 'viutv') then duration else 0 end)"
        sum_session_duration_iflix_video: "sum(case when lower(application) in ('iflix') then duration else 0 end)"

        sum_session_duration_spotify_music: "sum(case when lower(application) in ('spotify') then duration else 0 end)"
        sum_session_duration_joox_music: "sum(case when lower(application) in ('jooxmusic') then duration else 0 end)"

        sum_session_duration_twitch_esport: "sum(case when lower(application) in ('twitchtv') then duration else 0 end)"
        sum_session_duration_bigo_esport: "sum(case when lower(application) in ('bigo') then duration else 0 end)"
        sum_session_duration_mixer_esport: "sum(case when lower(application) in ('mixerbox') then duration else 0 end)"
        sum_session_duration_steamtv_esport: "sum(case when lower(application) in ('valve_steam') then duration else 0 end)"

        max_session_duration_youtube_video: "max(case when lower(application) in ('youtube', 'youtube_go',
         'youtubebyclick') then duration else 0 end)"
        max_session_duration_facebook_video: "max(case when lower(application) in ('facebook') then duration else 0 end)"
        max_session_duration_linetv_video: "max(case when lower(application) in ('linetv') then duration else 0 end)"
        max_session_duration_ais_play_video: "max(case when lower(application) in ('ais_play') then duration else 0 end)"
        max_session_duration_netflix_video: "max(case when lower(application) in ('netflix') then duration else 0 end)"
        max_session_duration_viu_video: "max(case when lower(application) in ('viu', 'viutv') then duration else 0 end)"
        max_session_duration_iflix_video: "max(case when lower(application) in ('iflix') then duration else 0 end)"

        max_session_duration_spotify_music: "max(case when lower(application) in ('spotify') then duration else 0 end)"
        max_session_duration_joox_music: "max(case when lower(application) in ('jooxmusic') then duration else 0 end)"

        max_session_duration_twitch_esport: "max(case when lower(application) in ('twitchtv') then duration else 0 end)"
        max_session_duration_bigo_esport: "max(case when lower(application) in ('bigo') then duration else 0 end)"
        max_session_duration_mixer_esport: "max(case when lower(application) in ('mixerbox') then duration else 0 end)"
        max_session_duration_steamtv_esport: "max(case when lower(application) in ('valve_steam') then duration else 0 end)"

        min_session_duration_youtube_video: "min(case when lower(application) in ('youtube', 'youtube_go',
         'youtubebyclick') then duration else 0 end)"
        min_session_duration_facebook_video: "min(case when lower(application) in ('facebook') then duration else 0 end)"
        min_session_duration_linetv_video: "min(case when lower(application) in ('linetv') then duration else 0 end)"
        min_session_duration_ais_play_video: "min(case when lower(application) in ('ais_play') then duration else 0 end)"
        min_session_duration_netflix_video: "min(case when lower(application) in ('netflix') then duration else 0 end)"
        min_session_duration_viu_video: "min(case when lower(application) in ('viu', 'viutv') then duration else 0 end)"
        min_session_duration_iflix_video: "min(case when lower(application) in ('iflix') then duration else 0 end)"

        min_session_duration_spotify_music: "min(case when lower(application) in ('spotify') then duration else 0 end)"
        min_session_duration_joox_music: "min(case when lower(application) in ('jooxmusic') then duration else 0 end)"

        min_session_duration_twitch_esport: "min(case when lower(application) in ('twitchtv') then duration else 0 end)"
        min_session_duration_bigo_esport: "min(case when lower(application) in ('bigo') then duration else 0 end)"
        min_session_duration_mixer_esport: "min(case when lower(application) in ('mixerbox') then duration else 0 end)"
        min_session_duration_steamtv_esport: "min(case when lower(application) in ('valve_steam') then duration else 0 end)"


        avg_duration_per_session_youtube_video: "avg(case when lower(application) in ('youtube', 'youtube_go',
         'youtubebyclick') then duration else 0 end)"
        avg_duration_per_session_facebook_video: "avg(case when lower(application) in ('facebook')
        then duration else 0 end)"
        avg_duration_per_session_linetv_video: "avg(case when lower(application) in ('linetv') then duration else 0 end)"
        avg_duration_per_session_ais_play_video: "avg(case when lower(application) in ('ais_play')
        then duration else 0 end)"
        avg_duration_per_session_netflix_video: "avg(case when lower(application) in ('netflix')
        then duration else 0 end)"
        avg_duration_per_session_viu_video: "avg(case when lower(application) in ('viu', 'viutv')
        then duration else 0 end)"
        avg_duration_per_session_iflix_video: "avg(case when lower(application) in ('iflix')
        then duration else 0 end)"

        avg_duration_per_session_spotify_music: "avg(case when lower(application) in ('spotify')
        then duration else 0 end)"
        avg_duration_per_session_joox_music: "avg(case when lower(application) in ('jooxmusic') then duration else 0 end)"

        avg_duration_per_session_twitch_esport: "avg(case when lower(application) in ('twitchtv')
        then duration else 0 end)"
        avg_duration_per_session_bigo_esport: "avg(case when lower(application) in ('bigo') then duration else 0 end)"
        avg_duration_per_session_mixer_esport: "avg(case when lower(application) in ('mixerbox')
        then duration else 0 end)"
        avg_duration_per_session_steamtv_esport: "avg(case when lower(application) in ('valve_steam')
        then duration else 0 end)"

    granularity: "msisdn, partition_date"
    event_date_column: "to_date(cast(partition_date as string), 'yyyyMMdd')"
    join_column_with_cust_profile:
        access_method_num: msisdn
        event_partition_date: event_partition_date # after aggregation
    partition_num_per_job: 10
    output_catalog: "l1_streaming_session_duration_feature"

l1_soc_app_daily_agg_features:
    feature_list:
        fea_soc_app_total_download_traffic_total: "sum(total_download_kb)"
        fea_soc_app_total_frequency_access_total: "sum(total_visit_counts)"
        fea_soc_app_total_visit_duration: "sum(total_duration)"
        fea_soc_app_total_download_traffic_afternoon: "sum(total_soc_app_download_traffic_afternoon)"
        fea_soc_app_total_visit_duration_afternoon: "sum(total_soc_app_visit_duration_afternoon)"
        fea_soc_app_total_visit_counts_afternoon: "sum(total_soc_app_visit_counts_afternoon)"
    granularity: "mobile_no,partition_date,level_1"

l1_soc_app_daily_ratio_based_features:
    feature_list:
        mobile_no: "mobile_no"
        partition_date: "partition_date"
        level_1: "level_1"
        fea_soc_app_total_download_traffic_total: "fea_soc_app_total_download_traffic_total"
        fea_soc_app_total_frequency_access_total: "fea_soc_app_total_frequency_access_total"
        fea_soc_app_total_visit_duration: "fea_soc_app_total_visit_duration"
        fea_soc_app_total_download_traffic_afternoon: "fea_soc_app_total_download_traffic_afternoon"
        fea_soc_app_total_visit_duration_afternoon: "fea_soc_app_total_visit_duration_afternoon"
        fea_soc_app_total_visit_counts_afternoon: "fea_soc_app_total_visit_counts_afternoon"
        fea_soc_app_category_weight_by_visit_counts: "round(fea_soc_app_total_frequency_access_total / total_soc_app_daily_visit_count, 2)"
        fea_soc_app_category_weight_by_duration: "round(fea_soc_app_total_visit_duration / total_soc_app_daily_visit_duration, 2)"
        fea_soc_app_category_weight_by_download_traffic: "round(fea_soc_app_total_download_traffic_total / total_soc_app_daily_download_traffic, 2)"
        fea_soc_app_share_afternoon_visit_counts: "round(fea_soc_app_total_visit_counts_afternoon / total_soc_app_daily_visit_count, 2)"
        fea_soc_app_share_afternoon_download_traffic: "round(fea_soc_app_total_download_traffic_afternoon / total_soc_app_daily_download_traffic, 2)"
        fea_soc_app_share_afternoon_visit_duration: "round(fea_soc_app_total_visit_duration_afternoon / total_soc_app_daily_visit_duration, 2)"
    granularity: ""

l1_soc_web_daily_agg_features:
    feature_list:
        total_download_kb: "sum(total_download_kb)"
        total_duration: "sum(total_duration)"
        fea_soc_web_total_download_traffic_afternoon: "sum(total_soc_web_download_traffic_afternoon)"
        total_visit_counts_afternoon: "sum(total_visit_counts_afternoon)"
        total_visit_duration_afternoon: "sum(total_visit_duration_afternoon)"
    granularity: "mobile_no,partition_date,level_1"

l1_soc_web_daily_ratio_based_features:
    feature_list:
        mobile_no: "mobile_no"
        partition_date: "partition_date"
        level_1: "level_1"
        fea_soc_web_total_download_traffic_afternoon: "fea_soc_web_total_download_traffic_afternoon"
        total_visit_counts_afternoon: "total_visit_counts_afternoon"
        total_visit_duration_afternoon: "total_visit_duration_afternoon"
        fea_soc_web_category_weight_by_download_traffic: "round(total_download_kb/total_soc_web_daily_download_traffic, 2)"
        fea_soc_web_share_afternoon_download_traffic: "round(fea_soc_web_total_download_traffic_afternoon/total_soc_web_daily_download_traffic, 2)"
    granularity: ""

l1_relay_daily_total_pageviews_visits_count:
  where_clause: ""
  feature_list:
    fea_relay_total_pageviews_visits_count: "count(*)"
  granularity: "subscription_identifier,partition_date"


# popular
l1_relay_daily_popular_url_by_pageviews:
  where_clause: ""
  feature_list:
    total_pageviews_visits_by_url: "count(*)"
    rank: "row_number() over(partition by subscription_identifier,
                      partition_date
                      order by count(*) desc,url asc)"
  granularity: "subscription_identifier,partition_date,url"

l1_relay_daily_popular_subcategory1_by_pageviews:
  where_clause: ""
  feature_list:
    total_pageviews_visits_by_subcategory1: "count(*)"
    rank: "row_number() over(partition by subscription_identifier,
                      partition_date
                      order by count(*) desc,subcategory1 asc)"
  granularity: "subscription_identifier,partition_date,subcategory1"


l1_relay_daily_popular_subcategory2_by_pageviews:
  where_clause: ""
  feature_list:
    total_pageviews_visits_by_subcategory2: "count(*)"
    rank: "row_number() over(partition by subscription_identifier,
                      partition_date
                      order by count(*) desc,subcategory2 asc)"
  granularity: "subscription_identifier,partition_date,subcategory2"

l1_relay_daily_popular_cid_by_pageviews:
  where_clause: ""
  feature_list:
    total_pageviews_visits_by_cid: "count(*)"
    rank: "row_number() over(partition by subscription_identifier,
                      partition_date
                      order by count(*) desc,cid asc)"
  granularity: "subscription_identifier,partition_date,cid"

l1_relay_daily_popular_productname_by_pageviews:
  where_clause: ""
  feature_list:
    total_pageviews_visits_by_productname: "count(*)"
    rank: "row_number() over(partition by subscription_identifier,
                      partition_date
                      order by count(*) desc,R42productName asc)"
  granularity: "subscription_identifier,partition_date,R42productName"

# most popular
l1_relay_daily_most_popular_url_by_pageviews:
  where_clause: "where rank = 1"
  feature_list:
    subscription_identifier: "subscription_identifier"
    partition_date: "partition_date"
    fea_relay_favourite_url_by_total_pageviews_visits_count: "url"
  granularity: ""

l1_relay_daily_most_popular_subcategory1_by_pageviews:
  where_clause: "where rank = 1"
  feature_list:
    subscription_identifier: "subscription_identifier"
    partition_date: "partition_date"
    fea_relay_favourite_subcategory1_by_total_pageviews_visits_count: "subCategory1"
  granularity: ""

l1_relay_daily_most_popular_subcategory2_by_pageviews:
  where_clause: "where rank = 1"
  feature_list:
    subscription_identifier: "subscription_identifier"
    partition_date: "partition_date"
    fea_relay_favourite_subcategory2_by_total_pageviews_visits_count: "subCategory2"
  granularity: ""

l1_relay_daily_most_popular_cid_by_pageviews:
  where_clause: "where rank = 1"
  feature_list:
    subscription_identifier: "subscription_identifier"
    partition_date: "partition_date"
    fea_relay_favourite_cid_by_total_pageviews_visits_count: "cid"
  granularity: ""

l1_relay_daily_most_popular_productname_by_pageviews:
  where_clause: "where rank = 1"
  feature_list:
    subscription_identifier: "subscription_identifier"
    partition_date: "partition_date"
    fea_relay_favourite_productname_by_total_pageviews_visits_count: "R42productName"
  granularity: ""


#engagement_conversion
l1_relay_daily_total_engagement_conversion_visits_count:
  where_clause: ""
  feature_list:
    fea_relay_total_engagement_conversion_visits_count: "count(*)"
  granularity: "subscription_identifier,partition_date"

l1_relay_daily_popular_product_by_engagement_conversion:
  where_clause: ""
  feature_list:
    total_engagement_conversion_visits_by_product: "count(*)"
    rank: "row_number() over(partition by subscription_identifier,
                      partition_date
                      order by count(*) desc,product asc)"
  granularity: "subscription_identifier,partition_date,product"

l1_relay_daily_most_popular_product_by_engagement_conversion:
  where_clause: "where rank = 1"
  feature_list:
    subscription_identifier: "subscription_identifier"
    partition_date: "partition_date"
    fea_relay_favourite_product_by_total_engagement_conversion_visits_count: "product"
  granularity: ""

l1_relay_daily_popular_cid_by_engagement_conversion:
  where_clause: ""
  feature_list:
    total_engagement_conversion_visits_by_cid: "count(*)"
    rank: "row_number() over(partition by subscription_identifier,
                      partition_date
                      order by count(*) desc,cid asc)"
  granularity: "subscription_identifier,partition_date,cid"

l1_relay_daily_most_popular_cid_by_engagement_conversion:
  where_clause: "where rank = 1"
  feature_list:
    subscription_identifier: "subscription_identifier"
    partition_date: "partition_date"
    fea_relay_favourite_cid_by_total_engagement_conversion_visits_count: "cid"
  granularity: ""

#engagement_conversion_package

l1_relay_daily_total_engagement_conversion_package_visits_count:
  where_clause: ""
  feature_list:
    fea_relay_total_engagement_conversion_package_visits_count: "count(*)"
  granularity: "subscription_identifier,partition_date"

l1_relay_daily_popular_product_by_engagement_conversion_package:
  where_clause: ""
  feature_list:
    total_engagement_conversion_package_visits_by_product: "count(*)"
    rank: "row_number() over(partition by subscription_identifier,
                      partition_date
                      order by count(*) desc,product asc)"
  granularity: "subscription_identifier,partition_date,product"

l1_relay_daily_most_popular_product_by_engagement_conversion_package:
  where_clause: "where rank = 1"
  feature_list:
    subscription_identifier: "subscription_identifier"
    partition_date: "partition_date"
    fea_relay_favourite_product_by_total_engagement_conversion_package_visits_count: "product"
  granularity: ""

l1_relay_daily_popular_cid_by_engagement_conversion_package:
  where_clause: ""
  feature_list:
    total_engagement_conversion_package_visits_by_cid: "count(*)"
    rank: "row_number() over(partition by subscription_identifier,
                      partition_date
                      order by count(*) desc,cid asc)"
  granularity: "subscription_identifier,partition_date,cid"

l1_relay_daily_most_popular_cid_by_engagement_conversion_package:
  where_clause: "where rank = 1"
  feature_list:
    subscription_identifier: "subscription_identifier"
    partition_date: "partition_date"
    fea_relay_favourite_cid_by_total_engagement_conversion_package_visits_count: "cid"
  granularity: ""

l1_comb_soc_sum_features:
  feature_list:
    fea_comb_soc_total_download_traffic: "sum(coalesce(total_soc_web_download_kb, 0) + coalesce(total_soc_app_download_kb, 0))"
    fea_comb_soc_total_download_traffic_afternoon: "sum(coalesce(total_soc_web_download_traffic_afternoon, 0) +
                                                        coalesce(total_soc_app_download_traffic_afternoon, 0))"
  granularity: "mobile_no,partition_date,level_1"

l1_comb_soc_daily_stats:
  feature_list:
    total_comb_soc_daily_download_traffic: "sum(coalesce(total_soc_web_download_kb, 0) + coalesce(total_soc_app_download_kb, 0))"
  granularity: "mobile_no,partition_date"

l1_comb_soc_popular_app_or_url:
  feature_list:
    total_url_visit_count: "count(*)"
    rank: "row_number()
           over(partition by mobile_no, partition_date, level_1
                order by sum(coalesce(total_soc_web_download_kb, 0) + coalesce(total_soc_app_download_kb, 0)) desc,
                         priority asc,
                         app_or_url asc)"
  granularity: "mobile_no,partition_date,level_1,app_or_url,priority"

l1_comb_soc_most_popular_app_or_url:
  where_clause: "where rank = 1"
  feature_list:
    mobile_no: "mobile_no"
    partition_date: "partition_date"
    level_1: "level_1"
    fea_comb_soc_fav_url_by_download_traffic: "app_or_url"
  granularity: ""

l1_comb_soc_web_fea_all:
  feature_list:
    mobile_no: "mobile_no"
    partition_date: "partition_date"
    level_1: "level_1"
    fea_comb_soc_fav_url_by_download_traffic: "fea_comb_soc_fav_url_by_download_traffic"
    fea_comb_soc_total_download_traffic: "fea_comb_soc_total_download_traffic"
    fea_comb_soc_total_download_traffic_afternoon: "fea_comb_soc_total_download_traffic_afternoon"
    fea_comb_soc_category_weight_by_download_traffic: "round(fea_comb_soc_total_download_traffic/total_comb_soc_daily_download_traffic, 2)"
    fea_comb_soc_share_afternoon_download_traffic: "round(fea_comb_soc_total_download_traffic_afternoon/total_comb_soc_daily_download_traffic, 2)"
  granularity: ""
